[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "graph_of_thoughts"
version = "0.0.3"
authors = [
  { name = "Maciej Besta", email = "maciej.besta@inf.ethz.ch" },
  { name = "Nils Blach", email = "nils.blach@inf.ethz.ch" },
  { name = "Ales Kubicek", email = "akubicek@student.ethz.ch" },
  { name = "Robert Gerstenberger", email = "gerstenberger.robert@gmail.com" },
]
description = "Python package for Graph of Thoughts that enables solving elaborate problems with Large Language Models"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.12"
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Operating System :: OS Independent",
]
dependencies = [
  "backoff>=2.2.1,<3.0.0",
  "openai>=1.0.0,<2.0.0",
  "matplotlib>=3.7.1,<4.0.0",
  "numpy>=1.24.3,<2.0.0",
  "pandas>=2.0.3,<3.0.0",
  "sympy>=1.12,<2.0",
  "torch>=2.0.1,<3.0.0",
  "transformers>=4.31.0,<5.0.0",
  "accelerate>=0.21.0,<1.0.0",
  "bitsandbytes>=0.41.0,<1.0.0",
  "scipy>=1.10.1,<2.0.0",
  "mcp>=1.0.0,<2.0.0",
  "httpx>=0.24.0,<1.0.0",
  "anyio>=3.7.0,<5.0.0",
]

[project.urls]
Homepage = "https://github.com/spcl/graph-of-thoughts"

[project.scripts]
got-mcp-server = "graph_of_thoughts.__main__:main"

[tool.basedpyright]
# Type checking configuration for basedpyright
pythonVersion = "3.12"
pythonPlatform = "All"
typeCheckingMode = "standard"

# Include and exclude patterns
include = ["graph_of_thoughts", "examples", "tests"]
exclude = [
  "**/__pycache__",
  "**/node_modules",
  "**/.venv",
  "**/venv",
  "build",
  "dist",
  "paper",
  "docs",
]

# Reporting settings
reportMissingImports = true
reportMissingTypeStubs = false
reportImportCycles = true
reportUnusedImport = true
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedVariable = true
reportDuplicateImport = true
reportOptionalSubscript = true
reportOptionalMemberAccess = true
reportOptionalCall = true
reportOptionalIterable = true
reportOptionalContextManager = true
reportOptionalOperand = true
reportTypedDictNotRequiredAccess = false
reportPrivateImportUsage = true
reportConstantRedefinition = true
reportIncompatibleMethodOverride = true
reportIncompatibleVariableOverride = true
# reportOverlappingOverloads = true  # Not supported in this version
reportUntypedFunctionDecorator = false
reportUnknownParameterType = true
reportUnknownArgumentType = false
reportUnknownLambdaType = true
reportUnknownVariableType = false
reportUnknownMemberType = false
reportMissingParameterType = true
reportMissingTypeArgument = true
reportInvalidTypeVarUse = true
reportCallInDefaultInitializer = true
reportUnnecessaryIsInstance = true
reportUnnecessaryCast = true
reportUnnecessaryComparison = true
reportAssertAlwaysTrue = true
reportSelfClsParameterName = true
reportImplicitStringConcatenation = true
reportInvalidStubStatement = true
reportIncompleteStub = true
reportUnsupportedDunderAll = true
reportUnusedCallResult = false
reportDeprecated = true
reportUnannotatedClassAttribute = true
reportAbstractUsage = true
reportImplicitOverride = false

# Diagnostic severity overrides
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
strictParameterNoneValue = true

# Additional settings for better type checking
enableTypeIgnoreComments = true
disableBytesTypePromotions = true
